name: N8N Version Check

on:
  schedule:
    # Check for updates daily at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:
    inputs:
      auto_update:
        description: 'Automatically create PR with updates'
        required: false
        default: 'false'
        type: boolean

jobs:
  check-versions:
    name: Check N8N Versions
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Make scripts executable
        run: chmod +x scripts/check-versions.sh scripts/update-n8n-versions.sh

      - name: Check for version updates
        id: check
        run: |
          # Run version check and capture output
          ./scripts/check-versions.sh > version-check.log 2>&1 || true
          
          # Check if updates are available
          if grep -q "update available" version-check.log; then
            echo "updates_available=true" >> $GITHUB_OUTPUT
            echo "Updates found:"
            cat version-check.log
          else
            echo "updates_available=false" >> $GITHUB_OUTPUT
            echo "No updates available"
          fi

      - name: Get latest versions
        id: versions
        run: |
          # Get latest GitHub release
          LATEST_GITHUB=$(curl -s "https://api.github.com/repos/n8n-io/n8n/releases/latest" | \
            grep '"tag_name"' | cut -d'"' -f4 | sed 's/n8n@//')
          echo "latest_github=${LATEST_GITHUB}" >> $GITHUB_OUTPUT
          
          # Get current version
          CURRENT_DOCKER=$(grep "image: n8nio/n8n:" docker-compose.yml | sed 's/.*n8nio\/n8n://' | tr -d ' ')
          echo "current_docker=${CURRENT_DOCKER}" >> $GITHUB_OUTPUT
          
          # Get latest npm version
          LATEST_NPM=$(npm view n8n-core@latest version 2>/dev/null || echo "unknown")
          echo "latest_npm=${LATEST_NPM}" >> $GITHUB_OUTPUT

      - name: Create update PR
        if: steps.check.outputs.updates_available == 'true' && (github.event.inputs.auto_update == 'true' || github.event_name == 'schedule')
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { execSync } = require('child_process');
            
            // Create a new branch
            const branchName = `update/n8n-${{ steps.versions.outputs.latest_github }}`;
            
            try {
              // Configure git
              execSync('git config user.name "github-actions[bot]"');
              execSync('git config user.email "github-actions[bot]@users.noreply.github.com"');
              
              // Create and checkout new branch
              execSync(`git checkout -b ${branchName}`);
              
              // Run the update script
              execSync('./scripts/update-n8n-versions.sh');
              
              // Check if there are changes
              const changes = execSync('git status --porcelain').toString();
              
              if (changes) {
                // Add and commit changes
                execSync('git add docker-compose.yml .github/workflows/security.yml nodes/package.json nodes/package-lock.json');
                execSync(`git commit -m "chore: update N8N to version ${{ steps.versions.outputs.latest_github }}

                - Update Docker image: ${{ steps.versions.outputs.current_docker }} â†’ ${{ steps.versions.outputs.latest_github }}
                - Update npm packages to latest compatible versions
                - Update security scans to match new image version
                
                Auto-generated by version-check workflow"`);
                
                // Push the branch
                execSync(`git push origin ${branchName}`);
                
                // Create pull request
                const { data: pr } = await github.rest.pulls.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  title: `ðŸš€ Update N8N to version ${{ steps.versions.outputs.latest_github }}`,
                  head: branchName,
                  base: 'main',
                  body: `## ðŸ”„ Automated N8N Version Update

                This PR updates N8N to the latest version with security improvements.

                ### Changes:
                - **Docker Image**: \`${{ steps.versions.outputs.current_docker }}\` â†’ \`${{ steps.versions.outputs.latest_github }}\`
                - **npm Packages**: Updated to latest compatible versions
                - **Security Scans**: Updated to scan new image version

                ### Security Benefits:
                - Latest security patches and bug fixes
                - Updated vulnerability database scans
                - Improved stability and performance

                ### Testing:
                - [ ] Security scans pass
                - [ ] Integration tests pass
                - [ ] Manual testing completed

                ---
                *This PR was automatically created by the version-check workflow.*
                *Please review the changes and test thoroughly before merging.*`
                });
                
                console.log(`Created PR #${pr.number}: ${pr.html_url}`);
              } else {
                console.log('No changes to commit');
              }
            } catch (error) {
              console.error('Error creating update PR:', error);
              process.exit(1);
            }

      - name: Create issue for manual review
        if: steps.check.outputs.updates_available == 'true' && github.event.inputs.auto_update != 'true' && github.event_name != 'schedule'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `ðŸ”” N8N Version Update Available: ${{ steps.versions.outputs.latest_github }}`,
              body: `## ðŸ“¢ New N8N Version Available

              A new version of N8N is available for update.

              ### Current Version: \`${{ steps.versions.outputs.current_docker }}\`
              ### Latest Version: \`${{ steps.versions.outputs.latest_github }}\`

              ### To Update:
              1. Run: \`make update-versions\`
              2. Test the updated configuration
              3. Commit and push the changes

              ### Or trigger automatic update:
              - Go to Actions â†’ N8N Version Check â†’ Run workflow
              - Enable "Automatically create PR with updates"

              ---
              *This issue was automatically created by the version-check workflow.*`,
              labels: ['enhancement', 'dependencies', 'security']
            });

      - name: Upload version check results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: version-check-results
          path: version-check.log
          retention-days: 7
